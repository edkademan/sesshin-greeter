* Generate sesshin documents
  Generate sesshin documents
** Description
*** files
    The sdocs program is a command-line utility that usually takes
    just two arguments: an input directory and an output
    directory. The input directory contains the source information in
    the form of tab-separated-variable tables and the output directory
    holds the pdf results. The test-data/good subdirectory included in
    this distribution contains examples. The only files necessary are

      - jobs.tsv
      - rooms.tsv
      - roster.tsv
      - showers.tsv
      - shower-times.tsv
        
    The roster.tsv and jobs.tsv files are the most important and are
    probably the only ones that will change from sesshin to
    sesshin. Roster lists for each individual participant that
    participant's room, possible shower, possible shower time, job,
    and so on, and jobs lists the code, description, department and a
    possible time interval for each job. (Here "jobs" refers not only
    to tasks done during the work periods but also zendo duties.) The
    time interval specifies a period during which the individual is
    busy outside the normal work period and is incapable of taking a
    shower as described below.

    The other files simply describe their respective items. For
    example, rooms.tsv lists the allowable room numbers, and
    shower-times.tsv lists the possible shower times.

*** shower assignments
    In what follows the word "showers" refers both to showers and to
    the soaking baths.

    You can assign to each individual participant a particular shower
    but you don't have to. If you don't the system will assign one for
    you. The same is true for shower times. If you leave that field
    blank the system will pick a time for that individual. The shower
    that it picks will be close to that person's bedroom and the time
    that it picks will not conflict with that person's job. If you
    don't want an individual to have a shower assignment at all just
    describe their shower as "ignore".

    Also, you can specify a "shower time" that is actually a long span
    that implies several possible shower time slots. For example, if
    you describe the beginning and ending shower times as "8:00am
    2:00pm" the program will pick some slot either in the rest period
    immediately after the morning work period or in the period
    immediately after lunch, and will not pick one later in the day.
    
    To summarize, a shower can be either
      - a shower as described in showers.tsv or
      - "ignore" or
      - blank,
    a shower time can be
      - a span such as "8:00am 2:00pm" or
      - a starting time such as "12:50pm"
        (This is the same as "12:50pm 1:10pm".) or
      - blank,
    and the shower/shower-time combination can be
      - a shower and a shower time,
      - a shower with no shower time,
      - a shower time with no shower or
      - neither a shower nor a shower time.

** Diagnostics
   In addition to generating the pdf documents sdocs checks to make
   sure the information is coherent and complains if:

      - someone doesn't have a job, or has a job that it doesn't
        recognize
      - there is a job for which no one was assigned
      - someone wasn't assigned a room or was assigned a room that it
        doesn't recognize
      - someone was assigned a shower that it doesn't recognize
      - someone was assigned a shower time that looks unusual
      - more people were assigned to take a bath at the same time than
        that bath can accommodate.

   It will try to generate the documents even in the presence of what
   it sees as problems since they may not actually be problems. (You
   might be giving someone an unusual-looking shower time span so that
   the system can assign one on its own as described above for
   example.)

** Operation
   You must open a command prompt window with the Windows CMD
   program. Once inside navigate to the "bin" directory in this
   distribution using cd and do

   #+begin_example
     sdocs -i <input directory> -o <output directory>
   #+end_example

   where you replace <input directory> and <output directory> with the
   actual directory names. The output directory must exist already.

   A realistic-looking invocation with command prompt might look like

   #+begin_example
     > sdocs -i C:\Users\Ed\2018-01-sesshin -o C:\Users\Ed\pdfs
   #+end_example

   You don't have to make the bin directory current before you do this
   but if you don't then you need to qualify sdocs with the directory
   path so Windows can find it. For example, instead of "sdocs" you
   might type "sesshin-greeter\bin\sdocs".

   sdocs puts a title on each of the pages it generates. So in
   addition to specifying input and output directories on the command
   line you can also specify a title if you don't like the default one
   it chooses.

   #+begin_example
     > sdocs -i <...> -o <...> -t "April 2018 7-day Sesshin"
   #+end_example

* local variables
Local Variables:
eval: (load-file "Readme.el")
End:
